// https://gitlab.gnome.org/GNOME/gtk/-/blob/gtk-3-24/gtk/theme/Adwaita/_colors-public.scss

//catppuccin mocha
$base: #1e1e2e;
$text: #cdd6f4;
$pink: #f5c2e7;
$mauve: #cba6f7;
$red: #f38ba8;
$maroon: #eba0ac;
$peach: #fab387;
$yellow: #f9e2af;
$green: #a6e3a1;
$teal: #94e2d5;
$sky: #89dceb;
$sapphire: #74c7ec;
$blue: #89b4fa;
$lavender: #b4befe;
$text: #cdd6f4;
$subtext1: #bac2de;
$subtext0: #a6adc8;
$overlay2: #9399b2;
$overlay1: #7f849c;
$overlay0: #6c7086;
$surface2: #585b70;
$surface1: #45475a;
$surface0: #313244;
$base: #1e1e2e;
$mantle: #181825;
$crust: #11111b;

window.Bar {

  background: $crust;
  color: $text;

  :not(arrow) {
    all: unset;
    background: transparent;
  }

  .workspaces {
    .workspace {
      background: $surface0;
      padding: 0.0rem 0.4rem;
      font-weight: bold;

      * {
        padding: 0rem 0.2rem;
      }
    }

    .workspace.focused-workspace {
      background: $surface2;
    }

    .client {
      border-top: 0.1rem solid transparent;
    }

    .client.focused-client {
      border-top: 0.1rem solid $green;
    }
  }

  .clock {
    font-weight: bold;
  }

  .battery {
    &.critical {
      color: $red;

      levelbar trough block.filled {
        background-color: $red;
      }
    }

    &.charging,
    &.high {
      color: $green;

      levelbar trough block.filled {
        background-color: $green;
      }
    }
  }

  .audio-icon.muted {
    color: $red;
  }

  .sys-tray {
    menu {
      padding: 1rem;
      background: $crust;
      border-radius: 0.5rem;
      border: 2px solid $overlay1;

      menuitem {
        margin: 0.2rem;
        padding: 0.2rem;
        border-radius: 0.25rem;

        check {
          margin-right: 1rem;
          min-width: 0.7rem;
          min-height: 0.7rem;
          background-color: $overlay0;
          border-radius: 0.3rem;

          &:checked {
            background-color: $blue;
          }
        }

        &:hover {
          background-color: $base;
        }

        arrow {
          min-width: 1rem;
          min-height: 1rem;
        }
      }
    }
  }
}

// Mixin that sets styles based on depth.
// Adjust the variables as needed for your design.
@mixin depth-style($depth) {
  @if $depth ==0 {
    // Main container (depth 0)
    padding: $base-padding;
    margin: $base-margin;
    background: $crust;
    border-radius: $main-border-radius;

    .header {
      font-size: 1.8rem;
      font-weight: bold;
    }
  }

  @else if $depth ==1 {
    padding: $section-padding;
    margin: $section-margin;
    background: $mantle;
    border-radius: $section-border-radius;

    .header {
      font-size: 1.4rem;
      font-weight: bold;
    }
  }

  @else if $depth ==2 {
    padding: $nested-section-padding;
    margin: $nested-section-margin;
    background: $base;
    border-radius: $nested-section-border-radius;

    .header {
      font-size: 1rem;
      font-weight: bold;
    }
  }

  @else if $depth ==3 {
    padding: calc($nested-section-padding / 1.5);
    margin: calc($nested-section-margin / 2);
    background: $surface0;
    border-radius: $nested-section-border-radius;

    .header {
      font-size: 0.9rem;
      font-weight: bold;
    }
  }

  @else if $depth ==4 {
    padding: calc($nested-section-padding / 2);
    margin: calc($nested-section-margin / 3);
    background: lighten($surface0, 5%);
    border-radius: $nested-section-border-radius;

    .header {
      font-size: 0.8rem;
      font-weight: bold;
    }
  }
}

$base-margin: 1rem;
$base-padding: 1.5rem;

$section-margin: calc($base-margin / 2); // Half of the base margin
$section-padding: calc($base-padding * 0.67); // Approximately 1rem
$nested-section-margin: calc($section-margin / 2); // Further reduced for nested sections
$nested-section-padding: calc($section-padding / 1.5); // Further reduced padding

$main-border-radius: 0.5rem;
$section-border-radius: 0.5rem;
$nested-section-border-radius: 0.375rem;

window.hyprshell-launcher,
window.dashboard {
  * {
    all: unset;
    background: transparent;
  }

  .mainArea {
    @include depth-style(0);

    .entry,
    .section {
      @include depth-style(1);

      .left,
      .right {
        padding: 0 calc($nested-section-padding / 1.5);
      }

      .entry,
      .section {
        @include depth-style(2);

        .entry {
          @include depth-style(3);
        }
      }
    }
  }

  .device-icon {
    padding: 0 $base-margin;
  }

  .power-profiles-icon {
    padding-right: $base-margin;

    &.power-saver {
      color: $green;
    }

    &.performance {
      color: $peach;
    }
  }

  .slider {
    padding: 0 1rem;

    trough {
      min-width: 1rem;
      min-height: 1rem;
      background: $surface0;
      border-radius: $main-border-radius;

      highlight {
        border-radius: $main-border-radius;
        border-right: $surface0;
        background: $surface2;
      }
    }
  }

  .switch {
    color: $text;
    background: $surface1;
    border-radius: $main-border-radius;

    image {
      margin: -8px;
      -gtk-icon-transform: scale(0);
    }

    &:checked {
      background: $surface2;
    }

    slider {
      background: $blue;
      border-radius: $main-border-radius;
      min-width: 2rem;
      min-height: 0.5rem;
    }
  }

  .levelbar {
    trough {
      min-height: 1rem;
      border-radius: $main-border-radius;
    }

    block.empty {
      background: $surface0;
      border-radius: $main-border-radius;
    }

    block.filled {
      background: $surface2;
      border-radius: $main-border-radius;
    }
  }
}
